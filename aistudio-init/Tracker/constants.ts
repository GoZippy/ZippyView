
import { ProjectPlan, NextStep } from './types';

export const PROJECT_PLAN_DATA: ProjectPlan = {
  phases: [
    {
      id: "phase-1",
      title: "Phase 1: Foundation & Data Ingestion MVP",
      weeks: "Weeks 1-4",
      sections: [
        {
          id: "phase-1-section-1.1",
          title: "1.1. Core Infrastructure Setup",
          tasks: [
            { id: "p1-s1.1-t1", description: "Initialize Git repository (GitHub/GitLab).", completed: false },
            { id: "p1-s1.1-t2", description: "Set up Supabase Project: Create new Supabase project.", completed: false },
            { id: "p1-s1.1-t3", description: "Set up Supabase Project: Define `participants` table schema (basic fields: `id`, `discord_handle`, `github_username`, `registered_at`).", completed: false },
            { id: "p1-s1.1-t4", description: "Set up Supabase Project: Define `github_projects` table schema (basic fields: `id`, `repo_url`, `owner_username`, `repo_name`, `last_synced_at`).", completed: false },
            { id: "p1-s1.1-t5", description: "Set up Supabase Project: Define `commits` table schema (basic fields: `id`, `project_id`, `commit_hash`, `author_id`, `timestamp`, `message`).", completed: false },
            { id: "p1-s1.1-t6", description: "Set up Supabase Project: Define `ideas` table schema (basic fields: `id`, `proposer_ids`, `title`, `description`, `source_channel`, `timestamp`, `linked_github_repo_url`).", completed: false },
            { id: "p1-s1.1-t7", description: "Set up Supabase Project: Define `idea_interactions` table schema (basic fields: `id`, `idea_id`, `participant_id`, `type`, `timestamp`).", completed: false },
            { id: "p1-s1.1-t8", description: "Set up Supabase Project: Set up Supabase Row Level Security (RLS) for public access to relevant tables.", completed: false },
            { id: "p1-s1.1-t9", description: "Set up Bolt.new Project: Create new Bolt.new project.", completed: false },
            { id: "p1-s1.1-t10", description: "Set up Bolt.new Project: Connect Bolt.new to Supabase.", completed: false },
            { id: "p1-s1.1-t11", description: "Set up Bolt.new Project: Configure environment variables for API keys (Discord, GitHub, Supabase).", completed: false },
            { id: "p1-s1.1-t12", description: "Set up Netlify for Frontend: Create new Netlify site.", completed: false },
            { id: "p1-s1.1-t13", description: "Set up Netlify for Frontend: Connect to Git repository.", completed: false },
          ],
        },
        {
          id: "phase-1-section-1.2",
          title: "1.2. Data Ingestion & Initial Parsing",
          tasks: [
            { id: "p1-s1.2-t1", description: "Discord Integration: Create Discord bot application and obtain token.", completed: false },
            { id: "p1-s1.2-t2", description: "Discord Integration: Develop Bolt.new function to handle Discord webhook events for new messages.", completed: false },
            { id: "p1-s1.2-t3", description: "Discord Integration: Implement logic to extract `discord_handle` and message content.", completed: false },
            { id: "p1-s1.2-t4", description: "Discord Integration: Store raw Discord messages in a temporary or raw `messages` table for later parsing.", completed: false },
            { id: "p1-s1.2-t5", description: "Discord Integration: Initial parsing: Identify potential `github.com` URLs within messages.", completed: false },
            { id: "p1-s1.2-t6", description: "GitHub Integration: Obtain GitHub API token (Personal Access Token for initial dev).", completed: false },
            { id: "p1-s1.2-t7", description: "GitHub Integration: Develop Bolt.new function to poll GitHub for new commits on identified repositories.", completed: false },
            { id: "p1-s1.2-t8", description: "GitHub Integration: Develop Bolt.new function to fetch repository metadata (languages, initial LOC).", completed: false },
            { id: "p1-s1.2-t9", description: "GitHub Integration: Implement logic to store `github_projects` and `commits` data in Supabase.", completed: false },
            { id: "p1-s1.2-t10", description: "GitHub Integration: Handle rate limits for GitHub API calls.", completed: false },
            { id: "p1-s1.2-t11", description: "Participant Tracking: Automatically create/update `participants` records from Discord handles and GitHub usernames.", completed: false },
            { id: "p1-s1.2-t12", description: "Basic Logging & Error Handling: Implement basic logging for ingestion processes.", completed: false },
            { id: "p1-s1.2-t13", description: "Basic Logging & Error Handling: Set up error notifications for failed API calls or parsing.", completed: false },
          ],
        },
      ],
    },
    {
      id: "phase-2",
      title: "Phase 2: Core AI Engine & Basic Analytics",
      weeks: "Weeks 5-8",
      sections: [
        {
          id: "phase-2-section-2.1",
          title: "2.1. LLM Integration & Idea Processing",
          tasks: [
            { id: "p2-s2.1-t1", description: "LLM API Selection: Choose primary LLM provider (e.g., OpenAI, Anthropic).", completed: false },
            { id: "p2-s2.1-t2", description: "LLM API Selection: Obtain API keys.", completed: false },
            { id: "p2-s2.1-t3", description: "Idea Extraction & Summarization: Develop Bolt.new function (or Python service) to process new raw messages from `messages` table.", completed: false },
            { id: "p2-s2.1-t4", description: "Idea Extraction & Summarization: Implement prompt engineering to instruct LLM to: Identify if a message contains a distinct idea.", completed: false },
            { id: "p2-s2.1-t5", description: "Idea Extraction & Summarization: Implement prompt engineering to instruct LLM to: Extract a concise `title` and `description` for the idea.", completed: false },
            { id: "p2-s2.1-t6", description: "Idea Extraction & Summarization: Implement prompt engineering to instruct LLM to: Identify proposer(s) (`participant_ids`).", completed: false },
            { id: "p2-s2.1-t7", description: "Idea Extraction & Summarization: Store extracted ideas in the `ideas` table.", completed: false },
            { id: "p2-s2.1-t8", description: "Idea Extraction & Summarization: Implement a basic de-duplication strategy for ideas.", completed: false },
            { id: "p2-s2.1-t9", description: "Initial AI Analysis (SWOT & Monetization): Develop Bolt.new function to trigger LLM calls for new ideas.", completed: false },
            { id: "p2-s2.1-t10", description: "Initial AI Analysis (SWOT & Monetization): Design prompts for LLM to perform basic SWOT analysis on an idea summary.", completed: false },
            { id: "p2-s2.1-t11", description: "Initial AI Analysis (SWOT & Monetization): Design prompts for LLM to provide a basic monetization potential assessment/score.", completed: false },
            { id: "p2-s2.1-t12", description: "Initial AI Analysis (SWOT & Monetization): Store results in the `ai_analyses` table and update `ideas` table scores.", completed: false },
            { id: "p2-s2.1-t13", description: "Similarity Detection (Basic): Integrate LLM embedding API (e.g., OpenAI Embeddings).", completed: false },
            { id: "p2-s2.1-t14", description: "Similarity Detection (Basic): Generate embeddings for new idea descriptions.", completed: false },
            { id: "p2-s2.1-t15", description: "Similarity Detection (Basic): Store embeddings in `ideas` table (using `pg_vector` extension).", completed: false },
            { id: "p2-s2.1-t16", description: "Similarity Detection (Basic): Implement basic cosine similarity search to find similar ideas when a new one is added.", completed: false },
          ],
        },
        {
          id: "phase-2-section-2.2",
          title: "2.2. Basic Metrics & Data Enrichment",
          tasks: [
            { id: "p2-s2.2-t1", description: "GitHub Project Metrics: Develop Bolt.new function to calculate Lines of Code (LOC) for `github_projects` (e.g., using `cloc` or similar via a background job).", completed: false },
            { id: "p2-s2.2-t2", description: "GitHub Project Metrics: Update `github_projects` table with commit count and developer count.", completed: false },
            { id: "p2-s2.2-t3", description: "Idea Engagement Metrics: Aggregate reactions/comments from `idea_interactions` to calculate `current_engagement_score` for `ideas`.", completed: false },
          ],
        },
      ],
    },
    {
      id: "phase-3",
      title: "Phase 3: Frontend MVP & Initial Visualizations",
      weeks: "Weeks 9-12",
      sections: [
        {
          id: "phase-3-section-3.1",
          title: "3.1. Frontend Core Development",
          tasks: [
            { id: "p3-s3.1-t1", description: "Project Setup: Create React/Vue/Angular project (e.g., `create-react-app`, `vue-cli`, `angular-cli`).", completed: false },
            { id: "p3-s3.1-t2", description: "Project Setup: Install Supabase JS SDK.", completed: false },
            { id: "p3-s3.1-t3", description: "Basic Authentication (Optional): Implement basic user login/signup via Supabase Auth (if restricted access is desired).", completed: false },
            { id: "p3-s3.1-t4", description: "Dashboard Layout: Design main dashboard layout (header, left sidebar/main content).", completed: false },
            { id: "p3-s3.1-t5", description: "Idea List View: Fetch and display list of `ideas` from Supabase.", completed: false },
            { id: "p3-s3.1-t6", description: "Idea List View: Implement basic filtering/sorting (e.g., by date, engagement).", completed: false },
            { id: "p3-s3.1-t7", description: "Idea List View: Display basic summary, proposer, and scores for each idea.", completed: false },
            { id: "p3-s3.1-t8", description: "Project List View: Fetch and display list of `github_projects`.", completed: false },
            { id: "p3-s3.1-t9", description: "Project List View: Display basic stats (commits, devs, LOC).", completed: false },
          ],
        },
        {
          id: "phase-3-section-3.2",
          title: "3.2. Initial Visualizations",
          tasks: [
            { id: "p3-s3.2-t1", description: "Gource-like Video Generation (MVP): Develop a dedicated Python service (or Bolt.new workflow) using MoviePy/FFmpeg.", completed: false },
            { id: "p3-s3.2-t2", description: "Gource-like Video Generation (MVP): Input: Git repository clone and commit data from Supabase.", completed: false },
            { id: "p3-s3.2-t3", description: "Gource-like Video Generation (MVP): Output: Basic MP4 video for a single project (no custom overlays yet).", completed: false },
            { id: "p3-s3.2-t4", description: "Gource-like Video Generation (MVP): Store generated video in Supabase Storage.", completed: false },
            { id: "p3-s3.2-t5", description: "Frontend Video Player: Embed video player in frontend to display generated Gource-like videos.", completed: false },
            { id: "p3-s3.2-t6", description: "Frontend Video Player: Link project cards to their respective video visualizations.", completed: false },
            { id: "p3-s3.2-t7", description: "Idea Heatmap (2D MVP): Use D3.js or a charting library (Chart.js) to create a simple scatter plot or bubble chart.", completed: false },
            { id: "p3-s3.2-t8", description: "Idea Heatmap (2D MVP): Map idea `engagement_score` to size/color.", completed: false },
            { id: "p3-s3.2-t9", description: "Idea Heatmap (2D MVP): Map `monetization_score` to another visual attribute (e.g., brightness).", completed: false },
            { id: "p3-s3.2-t10", description: "Idea Heatmap (2D MVP): Implement basic hover states to show idea title and proposer.", completed: false },
          ],
        },
      ],
    },
    {
      id: "phase-4",
      title: "Phase 4: Viral & Advanced Features",
      weeks: "Weeks 13-16",
      sections: [
        {
          id: "phase-4-section-4.1",
          title: "4.1. Advanced AI & Analytics",
          tasks: [
            { id: "p4-s4.1-t1", description: "Enhanced AI Analysis: Refine LLM prompts for more detailed SWOT components, specific monetization strategies, and nuanced creativity/usefulness scoring.", completed: false },
            { id: "p4-s4.1-t2", description: "Enhanced AI Analysis: Implement tool usage analysis (NLP on idea descriptions and commit messages to infer tools).", completed: false },
            { id: "p4-s4.1-t3", description: "Enhanced AI Analysis: Multi-LLM Perspective: Implement API calls to different LLM providers (e.g., Claude, Gemini) and compare/present their unique insights.", completed: false },
            { id: "p4-s4.1-t4", description: "AI Social Media Caption Generation: Develop Bolt.new function to generate platform-specific (Twitter, LinkedIn, TikTok, YouTube) captions, hashtags, and suggested text for sharing.", completed: false },
          ],
        },
        {
          id: "phase-4-section-4.2",
          title: "4.2. Viral Sharing & Social Integration",
          tasks: [
            { id: "p4-s4.2-t1", description: "Participant Profile Linking: Develop UI for users to add/edit their social media links in their `participants` profile.", completed: false },
            { id: "p4-s4.2-t2", description: "Personalized Video Generation: Develop UI allowing users to select a timeframe or specific contributions for a personalized Gource-like video export.", completed: false },
            { id: "p4-s4.2-t3", description: "Personalized Video Generation: Integrate UI for users to select background music from the `background_music` table.", completed: false },
            { id: "p4-s4.2-t4", description: "Personalized Video Generation: Trigger server-side video generation for personalized clips.", completed: false },
            { id: "p4-s4.2-t5", description: "Open Audio Library: Curate initial list of royalty-free background music.", completed: false },
            { id: "p4-s4.2-t6", description: "Open Audio Library: Upload audio files to Supabase Storage and populate `background_music` table.", completed: false },
            { id: "p4-s4.2-t7", description: "Direct Share Integration: Implement share buttons on video views and idea detail pages (e.g., \"Share to Twitter\", \"Share to Facebook\").", completed: false },
            { id: "p4-s4.2-t8", description: "Direct Share Integration: Use platform SDKs or direct share URLs with pre-populated text and video links/thumbnails.", completed: false },
            { id: "p4-s4.2-t9", description: "Direct Share Integration: Investigate and, if feasible, integrate TikTok for direct video uploads.", completed: false },
            { id: "p4-s4.2-t10", description: "Automated Platform Publishing: Set up Bolt.new schedule to generate and upload general hackathon recap videos to ZippyView's YouTube channel.", completed: false },
            { id: "p4-s4.2-t11", description: "Automated Platform Publishing: Set up automated posts to Twitter/LinkedIn with summary stats or top ideas.", completed: false },
          ],
        },
        {
          id: "phase-4-section-4.3",
          title: "4.3. Visualization Enhancement",
          tasks: [
            { id: "p4-s4.3-t1", description: "Refined Gource-like Visuals: Add on-video text overlays (project name, current date, key stats).", completed: false },
            { id: "p4-s4.3-t2", description: "Refined Gource-like Visuals: Improve visual fidelity and smoothness of animations.", completed: false },
            { id: "p4-s4.3-t3", description: "Enhanced Idea Heatmap/Galaxy: Implement interactive clustering of similar ideas.", completed: false },
            { id: "p4-s4.3-t4", description: "Enhanced Idea Heatmap/Galaxy: Add more filtering and search capabilities (by proposer, tools, channel).", completed: false },
            { id: "p4-s4.3-t5", description: "Enhanced Idea Heatmap/Galaxy: Implement \"drill-down\" functionality for idea details from the map.", completed: false },
            { id: "p4-s4.3-t6", description: "Comprehensive Analytics Dashboard: Develop dedicated \"Analytics\" section in frontend.", completed: false },
            { id: "p4-s4.3-t7", description: "Comprehensive Analytics Dashboard: Implement charts for \"Hackathon Pulse\" (total ideas, projects over time).", completed: false },
            { id: "p4-s4.3-t8", description: "Comprehensive Analytics Dashboard: Bar charts for \"Tool Popularity\" (discussed vs. used).", completed: false },
            { id: "p4-s4.3-t9", description: "Comprehensive Analytics Dashboard: Leaderboards for \"Participant Engagement\".", completed: false },
            { id: "p4-s4.3-t10", description: "Comprehensive Analytics Dashboard: Distribution charts for AI scores.", completed: false },
          ],
        },
        {
          id: "phase-4-section-4.4",
          title: "4.4. Collaboration & Competition Facilitation",
          tasks: [
            { id: "p4-s4.4-t1", description: "Similarity Suggestions: Display \"Similar Ideas\" section in idea detail view with links to other ideas and their similarity scores.", completed: false },
            { id: "p4-s4.4-t2", description: "Similarity Suggestions: Implement UI for prompting collaboration suggestions.", completed: false },
            { id: "p4-s4.4-t3", description: "Multi-LLM Critiques Display: Create dedicated UI section for displaying different LLM perspectives on an idea.", completed: false },
          ],
        },
        {
          id: "phase-4-section-4.5",
          title: "4.5. Initial 3D Client-Side (Optional/Stretch)",
          tasks: [
            { id: "p4-s4.5-t1", description: "Research and prototype client-side 3D rendering (Three.js/Babylon.js).", completed: false },
            { id: "p4-s4.5-t2", description: "Define data format for client-side download of project/idea graph data.", completed: false },
            { id: "p4-s4.5-t3", description: "Implement basic interactive fly-through for the code galaxy.", completed: false },
          ],
        },
      ],
    },
    {
      id: "phase-5",
      title: "Phase 5: Testing, Optimization & Deployment",
      weeks: "Weeks 17-20+",
      sections: [
        {
          id: "phase-5-section-5.1",
          title: "5.1. Quality Assurance & Performance",
          tasks: [
            { id: "p5-s5.1-t1", description: "Unit Testing: Write unit tests for core backend functions, AI logic, and frontend components.", completed: false },
            { id: "p5-s5.1-t2", description: "Integration Testing: Test data flow from ingestion to database, AI processing, and visualization.", completed: false },
            { id: "p5-s5.1-t3", description: "End-to-End Testing: Simulate user journeys through the application.", completed: false },
            { id: "p5-s5.1-t4", description: "Performance Benchmarking: Measure latency for data ingestion.", completed: false },
            { id: "p5-s5.1-t5", description: "Performance Benchmarking: Benchmark AI processing times and costs.", completed: false },
            { id: "p5-s5.1-t6", description: "Performance Benchmarking: Test video generation times and optimize FFmpeg settings.", completed: false },
            { id: "p5-s5.1-t7", description: "Performance Benchmarking: Frontend rendering performance (especially for visualizations).", completed: false },
            { id: "p5-s5.1-t8", description: "Load Testing: Test system under anticipated load (concurrent users, high message/commit volume).", completed: false },
          ],
        },
        {
          id: "phase-5-section-5.2",
          title: "5.2. Security & Operations",
          tasks: [
            { id: "p5-s5.2-t1", description: "API Key Management: Securely store and rotate API keys (e.g., using Bolt.new secrets).", completed: false },
            { id: "p5-s5.2-t2", description: "Supabase Security: Review RLS policies, enable SSL, configure database backups.", completed: false },
            { id: "p5-s5.2-t3", description: "Input Validation & Sanitization: Prevent injection attacks and malformed data.", completed: false },
            { id: "p5-s5.2-t4", description: "Monitoring & Alerting: Set up monitoring for Bolt.new function execution, Supabase database performance, and frontend errors. Implement alerts for critical issues.", completed: false },
          ],
        },
        {
          id: "phase-5-section-5.3",
          title: "5.3. Documentation & Deployment",
          tasks: [
            { id: "p5-s5.3-t1", description: "User Documentation: Create guides for hackathon organizers and participants on how to use ZippyView.", completed: false },
            { id: "p5-s5.3-t2", description: "Developer Documentation: Update `CONTRIBUTING.md`, API documentation, and detailed setup guides.", completed: false },
            { id: "p5-s5.3-t3", description: "Privacy Policy & Terms of Service: Draft and publish clear legal documents regarding data collection and usage.", completed: false },
            { id: "p5-s5.3-t4", description: "Production Deployment Strategy: Finalize deployment pipelines for all components (Bolt.new, Supabase, Netlify).", completed: false },
            { id: "p5-s5.3-t5", description: "Launch & Marketing Plan: Coordinate official launch activities.", completed: false },
          ],
        },
      ],
    },
  ],
};

export const NEXT_IMMEDIATE_STEPS_DATA: NextStep[] = [
  { id: "next-1", description: "Set up the core GitHub Repository: Create the `zippyview` repository on GitHub.", completed: false },
  { id: "next-2", description: "Initialize Supabase Project: Get the database up and running with the initial schemas defined in Phase 1.1.", completed: false },
  { id: "next-3", description: "Basic Bolt.new Setup: Get your Bolt.new environment ready to deploy your first functions.", completed: false },
  { id: "next-4", description: "Connect Discord: Start with the Discord bot setup to begin ingesting messages as the first data stream.", completed: false },
];
